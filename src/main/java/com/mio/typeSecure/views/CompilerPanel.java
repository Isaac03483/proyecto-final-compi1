/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mio.typeSecure.views;

import com.mio.typeSecure.utils.LineNumber;

import javax.swing.*;
import javax.swing.text.BadLocationException;

/**
 *
 * @author mio
 */
public class CompilerPanel extends javax.swing.JPanel {

    LineNumber lineNumber;
    /**
     * Creates new form CompilerPanel
     */
    public CompilerPanel() {
        initComponents();
        lineNumber = new LineNumber(this.inputArea);
        jScrollPane1.setRowHeaderView(lineNumber);

    }


    private void count() throws BadLocationException {

        int line = inputArea.getLineOfOffset(inputArea.getCaretPosition())+1;
        int column = inputArea.getCaretPosition() - inputArea.getLineStartOffset(line -1) +1;

        lineColText.setText("Linea: "+line+" Columna: "+column);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        compilerButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        lineColText = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));

        compilerButton.setBackground(new java.awt.Color(0, 204, 102));
        compilerButton.setText("Compilar");

        inputArea.setBackground(new java.awt.Color(102, 102, 102));
        inputArea.setColumns(20);
        inputArea.setForeground(new java.awt.Color(255, 255, 255));
        inputArea.setRows(5);
        inputArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(inputArea);

        outputArea.setEditable(false);
        outputArea.setBackground(new java.awt.Color(102, 102, 102));
        outputArea.setColumns(20);
        outputArea.setForeground(new java.awt.Color(255, 255, 255));
        outputArea.setRows(5);
        jScrollPane2.setViewportView(outputArea);

        lineColText.setForeground(new java.awt.Color(255, 255, 255));
        lineColText.setText("Linea: 0 Columna: 0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lineColText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(compilerButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compilerButton)
                    .addComponent(lineColText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inputAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputAreaKeyReleased
        // TODO add your handling code here:
        try {
            count();
        } catch (BadLocationException e) {
            System.err.println("Something went wrong");
        }
    }//GEN-LAST:event_inputAreaKeyReleased

    public JTextArea getInputArea() {
        return inputArea;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton compilerButton;
    private javax.swing.JTextArea inputArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lineColText;
    private javax.swing.JTextArea outputArea;
    // End of variables declaration//GEN-END:variables
}
